@use "sass:string";

@function option($id) {
	$s : "";
	@each $i in $id{
		$s :$s+"."+$i + " , *["+ $i +"],";
	}
	$t: string.slice($s,-1);
  @return $s;
}

/************************************************************************/
/************************** ROW | COL |CELL *****************************/
/************************************************************************/
.row{
	display: flex;
	flex-wrap: wrap;
	max-width: 100%;
}
.col{
	display: flex;
	flex-direction: column;
	width: 100%;
}
.cell{
	display: block;
    box-sizing: border-box;
	width: 100%;
	padding: var(--rel-padding);
	max-width: 100%;
}
@media only screen and (min-width: 768px ) {
	.cell,.col{
		flex-basis: 0;
		flex-grow: 1;
		max-width: 100%;
	}

}

/************************************************************************/
/******************************** TWEAKERS ******************************/
/************************************************************************/
#{option( "inline"  )} {
	display: inline;
	font-size: 1em;
	line-height: 1em;
	min-height: 1em;
	vertical-align: middle;
}

	//		padding: calc(var(--padding-scale)* var(--rel-padding) * #{$i } );
			// make function to dynamically add and conglomerate them
@for $i from 0 through 5 {

	#{option( "m-"+ #{$i } )} {
		margin: #{$i}rem;
	}
	#{option( "s-"+ #{$i}  )} {
		font-size: #{$i}rem;
	}
}